/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject1;

import javax.swing.*;
import javax.swing.plaf.basic.BasicTextUI;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.Highlighter.HighlightPainter;
import java.awt.*;

/**
 * @author halil
 */
public class spellCheckerDesign extends javax.swing.JFrame {

    String suggestion;
    String result;
    String closest;

    /**
     * Creates new form NewJFrame
     */
    public spellCheckerDesign() {
        initComponents();
    }

    public void spellChecker(String inputWord) {
        BinarySearchTree<String> dictionary = new BinarySearchTree<>();

        dictionary.loadDictionary2("/output.txt");

        BinarySearchTree<String> suggestions = dictionary.getSuggestions(inputWord, Integer.parseInt(spinner1.getValue().toString()));

        suggestion = suggestions.getValues();
        closest = suggestions.findMin();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_clear = new javax.swing.JButton();
        btn_autocomplete = new javax.swing.JButton();
        btn_check = new javax.swing.JButton();
        spinner1 = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Spell Checker");
        setMinimumSize(new java.awt.Dimension(550, 510));
        setPreferredSize(new java.awt.Dimension(550, 510));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        jPanel1.add(btn_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 120, 40));

        btn_autocomplete.setText("Auto-complete");
        btn_autocomplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_autocompleteActionPerformed(evt);
            }
        });
        jPanel1.add(btn_autocomplete, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 130, 40));

        btn_check.setText("Check");
        btn_check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_checkActionPerformed(evt);
            }
        });
        jPanel1.add(btn_check, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 130, 40));

        spinner1.setModel(new javax.swing.SpinnerNumberModel(2, 1, 10, 1));
        spinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner1StateChanged(evt);
            }
        });
        jPanel1.add(spinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 10, 80, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 70));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        txtArea.setColumns(20);
        txtArea.setRows(5);
        txtArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAreaMouseClicked(evt);
            }

            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtAreaMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(txtArea);

        jPanel4.add(jScrollPane2);

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 700, 440));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        // TODO add your handling code here:

        if (txtArea.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Text area is already empty!", "Warning!", JOptionPane.WARNING_MESSAGE);
        }
        txtArea.setText("");

    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_autocompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_autocompleteActionPerformed
        // TODO add your handling code here:
        if (txtArea.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "There is no text to auto-complete!", "Warning!", JOptionPane.WARNING_MESSAGE);
        }

        JOptionPane.showMessageDialog(null, "The word will be auto-complete!", "Information", JOptionPane.INFORMATION_MESSAGE);
        //txtArea.setText("The word is spelled correctly.");
        txtArea.setText(result);

    }//GEN-LAST:event_btn_autocompleteActionPerformed

    private void btn_checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_checkActionPerformed
        // TODO add your handling code here:
        String text_area = txtArea.getText();
        String[] words = text_area.split("\\s+");
        text_area = text_area.toLowerCase();
        text_area = text_area.replaceAll("[^a-zA-Z\\s]", "");
        Highlighter h = txtArea.getHighlighter();

        StringBuilder sb = new StringBuilder();
        for (String s : words) {
            spellChecker(s);
            if (closest != null) {
                sb.append(closest + " ");
                try {

                    HighlightPainter red = new DefaultHighlighter.DefaultHighlightPainter(Color.red);

                    int i = text_area.indexOf(s);
                    h.addHighlight(i, i + s.length(), red);

                } catch (BadLocationException ex) {
                    System.err.println("Error " + ex.getMessage());
                }
            } else {
                // add a green highlight to show that the word is spelled correctly
                sb.append(s + " ");
                HighlightPainter green = new DefaultHighlighter.DefaultHighlightPainter(Color.green);
                try {
                    int i = text_area.indexOf(s);
                    h.addHighlight(i, i + s.length(), green);
                } catch (BadLocationException ex) {
                    System.err.println("Error " + ex.getMessage());
                }
            }
            //sb.append(closest + " ");
        }
        result = sb.toString().trim();

        if (txtArea.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Text area is already empty!", "Warning!", JOptionPane.WARNING_MESSAGE);
        } else if (txtArea.getText().equals(result)) {

            JOptionPane.showMessageDialog(null, "The word is spelled correctly.", "Information", JOptionPane.INFORMATION_MESSAGE);

            h.removeAllHighlights();

        } else {

        }

    }//GEN-LAST:event_btn_checkActionPerformed

    private void spinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner1StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_spinner1StateChanged

    private void txtAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAreaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAreaMouseClicked

    private void txtAreaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAreaMousePressed
        // TODO add your handling code here:
        //result = sb.toString().trim();
        if (SwingUtilities.isRightMouseButton(evt)) {
            //show pop up menu
            JPopupMenu popup = new JPopupMenu();
            String[] words = txtArea.getText().split("\\s+");
            //StringBuilder sb = new StringBuilder();
            spellChecker(txtArea.getSelectedText());
            String[] wordle = suggestion.split(",");
            for (String s : wordle) {
                JMenuItem item = new JMenuItem(s);
                popup.add(item);
            }
            txtArea.setComponentPopupMenu(popup);
            popup.show(txtArea, evt.getX(), evt.getY());

        }

    }//GEN-LAST:event_txtAreaMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(spellCheckerDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(spellCheckerDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(spellCheckerDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(spellCheckerDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new spellCheckerDesign().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_autocomplete;
    private javax.swing.JButton btn_check;
    private javax.swing.JButton btn_clear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spinner1;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
